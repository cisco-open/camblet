# python plain tls on port 7000
- selectors:
  - process:name: [python3]
    destination:port: 7000
  certificate:
    workloadID: pythonwithoutmtls
    dnsNames:
    - joska
  connection:
    mtls: DISABLE

# nginx or python on port 8000
- selectors:
  # local nginx
  - process:uid: 33
    process:name: nginx
    destination:port: 8000
  # local nginx in docker
  - process:uid: 101
    process:name: nginx
    docker:image:name:nginx: true
    destination:port: 80
  # local python or go file-server
  - process:uid: [501, 1001]
    process:name: [python3, file-server]
    destination:port: [8000, 8080]
  certificate:
    workloadID: accounting/department-a/important-backend/[process:uid]
    dnsNames:
    - a.acme.corp
    - b.acme.corp
    ttl: 3600s
  connection:
    allowedSPIFFEIDs:
    - spiffe://{{.TrustDomain}}/accounting
    - spiffe://{{.TrustDomain}}/curl
    - spiffe://{{.TrustDomain}}/egress-specific-workload-id
    - spiffe://{{.TrustDomain}}/flags

# curl or wrk connection to port 8000 or 8080
- selectors:
  - process:uid: [501, 1001]
    process:name: [curl, wrk]
    destination:port: [8000, 8080]
  certificate:
    workloadID: curl
  egress:
  - selectors:
    - app:label: traefik
    certificate:
      workloadID: specific-workload-id

# wget connection to port 8000 or 8080
- selectors:
  - process:uid: [501, 1001]
    process:name: wget
    destination:port: [8000, 8080]
  certificate:
    workloadID: wget
  egress:
  - selectors:
    - app:label: nginx
    certificate:
      workloadID: egress-specific-workload-id

# python3 with SSL to file-server with TLS
- selectors:
  - process:uid: [501, 1001]
    process:name: [python3, file-server]
    destination:port: [8010]
  certificate:
    workloadID: passthrough-test

# simple flags connection to port 8000
- selectors:
  - process:uid: [501, 1001]
    process:name: flags
    destination:port: 8000
  certificate:
    workloadID: flags
