---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import HeadCommon from '../components/docs/HeadCommon.astro'
import HeadSEO from '../components/docs/HeadSEO.astro'
import Header from '../components/docs/Header/Header.astro'
import PageContent from '../components/docs/PageContent/PageContent.astro'
import LeftSidebar from '../components/docs/LeftSidebar/LeftSidebar.astro'
import RightSidebar from '../components/docs/RightSidebar/RightSidebar.astro'
import { EDIT_URL, SITE } from '../consts'
import Container from "@components/container.astro";
import Layout from "./Layout.astro";
import Sectionhead from "@components/sectionhead.astro";



type Props = CollectionEntry<'docs'>['data'] & {
  headings: MarkdownHeading[]
}

const { headings, ...data } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const currentPage = Astro.url.pathname
const currentFile = `src/content/docs${currentPage.replace(/\/$/, '')}.mdx`
const editUrl = `${EDIT_URL}/${currentFile}`

const { title } = Astro.props;
---

<!-- <Layout title={title} classProp=''> -->
  <!-- <Container center=false> -->
      <div class="flex flex-col h-screen">
        <Header currentPage={currentPage} />
        <main class="flex flex-1">
          <aside id="grid-left" class="hidden lg:flex flex-col w-80 h-full sticky top-0 p-4 bg-[var(--theme-bg)]">
            <LeftSidebar currentPage={currentPage} />
          </aside>
      
          <div id="grid-main" class="flex-1 px-16 py-10">
            <PageContent title={data.title} headings={headings} editUrl={editUrl}>
              <slot />
            </PageContent>
          </div>
      
          <aside class="hidden xl:flex w-72 h-full sticky top-0 p-4">
            <RightSidebar headings={headings} editUrl={editUrl} />
          </aside>
        </main>
      </div>
      
      <style is:global>
        .layout > * {
          width: 100%;
          height: 100%;
        }
      
        .mobile-sidebar-toggle {
          overflow: hidden;
        }
      
        .mobile-sidebar-toggle #grid-left {
          display: block;
          top: 2rem;
        }
      </style>
      
      

      
      <!-- <style>
        body {
          width: 100%;
          grid-template-rows: var(--theme-navbar-height) 1fr;
          --gutter: 0.5rem;
          --doc-padding: 2rem;
        }

        .layout {
          display: grid;
          grid-auto-flow: column;
          grid-template-columns:
            minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
            minmax(var(--gutter), 1fr);
          overflow-x: hidden;
        }

        .grid-sidebar {
          height: 100vh;
          position: sticky;
          top: 0;
          padding: 0;
        }

        #grid-left {
          position: fixed;
          background-color: var(--theme-bg);
          z-index: 10;
          display: none;
        }

        #grid-main {
          padding: var(--doc-padding) var(--gutter);
          grid-column: 2;
          display: flex;
          flex-direction: column;
          height: 100%;
        }

        #grid-right {
          display: none;
        }

        @media (min-width: 50em) {
          .layout {
            overflow: initial;
            grid-template-columns: 20rem minmax(0, var(--max-width));
            gap: 1em;
          }

          #grid-left {
            display: flex;
            padding-left: 2rem;
            position: sticky;
            grid-column: 1;
          }
        }

        @media (min-width: 72em) {
          .layout {
            grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
            padding-left: 0;
            padding-right: 0;
            margin: 0 auto;
          }

          #grid-right {
            grid-column: 3;
            display: flex;
          }
        }
      </style>
      <style is:global>
        .layout > * {
          width: 100%;
          height: 100%;
        }

        .mobile-sidebar-toggle {
          overflow: hidden;
        }

        .mobile-sidebar-toggle #grid-left {
          display: block;
          top: 2rem;
        }
      </style>
        
        <Header currentPage={currentPage} />
        <main class="layout">
          <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
            <LeftSidebar currentPage={currentPage} />
          </aside>
          <div id="grid-main">
            <PageContent title={data.title} headings={headings} editUrl={editUrl}>
              <slot />
            </PageContent>
          </div>
          <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
            <RightSidebar headings={headings} editUrl={editUrl} />
          </aside>
        </main> -->
  <!-- </Container> -->
<!-- </Layout> -->

